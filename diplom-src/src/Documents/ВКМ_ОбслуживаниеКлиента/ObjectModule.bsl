#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Сообщение = СобратьСообщениеБоту(ОписаниеПроблемы, Комментарий, Специалист, Клиент, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот);
		ОтправитьСообщениеБоту(Сообщение);
	Иначе
		ДокументИзменен = Ложь;
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Специалист, Клиент, ДатаПроведенияРабот, ВремяНачалаРабот,
																	  | ВремяОкончанияРабот, ОписаниеПроблемы, Комментарий");
		Сообщение = СобратьСообщениеБоту(Реквизиты.ОписаниеПроблемы, Реквизиты.Комментарий, Реквизиты.Специалист, Реквизиты.Клиент,
										 Реквизиты.ДатаПроведенияРабот, Реквизиты.ВремяНачалаРабот, Реквизиты.ВремяОкончанияРабот);
		
		Если Реквизиты.Специалист <> Специалист Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменен выполняющий работы специалист.";
		КонецЕсли;
		Если Реквизиты.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменена дата проведения работ.";
		КонецЕсли;
		Если Реквизиты.ВремяНачалаРабот <> ВремяНачалаРабот Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменено время начала работ.";
		КонецЕсли;
		Если Реквизиты.ВремяОкончанияРабот <> ВремяОкончанияРабот Тогда
			ДокументИзменен = Истина;
			Сообщение = Сообщение + Символы.ПС + "ВНИМАНИЕ! Изменено время окончания работ.";
		КонецЕсли;

		Если ДокументИзменен Тогда
			ОтправитьСообщениеБоту(Сообщение);
		КонецЕсли;		
	КонецЕсли;
							
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_Дата КАК НачалоДействия,
		|	ДоговорыКонтрагентов.ВКМ_СрокДействия КАК ОкончаниеДействия,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ПО (ДоговорыКонтрагентов.Ссылка = ВКМ_ОбслуживаниеКлиента.Договор)
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаИзДоговора = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаИзДоговора.Следующий() Тогда
		Если ВыборкаИзДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_Абонент Тогда
			ОбщегоНазначения.СообщитьПользователю("Проведение невозможно. Указаный договор не является договором абонентского обслуживания.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Если Не (Дата >= НачалоДня(ВыборкаИзДоговора.НачалоДействия) И Дата <= КонецДня(ВыборкаИзДоговора.ОкончаниеДействия)) Тогда
			ОбщегоНазначения.СообщитьПользователю("Проведение невозможно. Дата документа должна находиться между датой начала и датой окончания действия договора.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК СуммаЧасовКОплате
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ВыборкаТЧ = Запрос.Выполнить().Выбрать();
	
	РеквизитДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Дата, Клиент, Договор");
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Если ВыборкаТЧ.Следующий() Тогда
		Если ЗначениеЗаполнено(ВыборкаТЧ.СуммаЧасовКОплате) Тогда
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = РеквизитДокумента.Дата;
			Движение.Клиент = РеквизитДокумента.Клиент;
			Движение.Договор = РеквизитДокумента.Договор;
			Движение.КоличествоЧасов = ВыборкаТЧ.СуммаЧасовКОплате;
			Движение.СуммаКОплате = ВыборкаТЧ.СуммаЧасовКОплате * ВыборкаИзДоговора.СтоимостьЧасаРаботы;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СобратьСообщениеБоту(ОписаниеПроблемы, Комментарий, Специалист, Клиент, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот) Экспорт
		
	Если ЗначениеЗаполнено(ОписаниеПроблемы) Тогда
		Сообщение = "Задача." + Символы.ПС + ОписаниеПроблемы + Символы.ПС;
		
		Если ЗначениеЗаполнено(Комментарий) Тогда
			Сообщение = Сообщение + "Коментарий." + Символы.ПС + Комментарий + Символы.ПС;
		КонецЕсли;
		Если ЗначениеЗаполнено(Специалист) Тогда
			Сообщение = СтрШаблон("Исполнитель: %1." + Символы.ПС + "Клиент: %2", ВРег(Специалист), Клиент) + Символы.ПС + Символы.ПС + Сообщение;
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаПроведенияРабот) Тогда
			Сообщение = Сообщение + Символы.ПС + СтрШаблон("Дата проведения работ: %1", Формат(ДатаПроведенияРабот, "ДЛФ=DD;"));
		КонецЕсли;
		Если ЗначениеЗаполнено(ВремяНачалаРабот) Тогда
			Сообщение = Сообщение + СтрШаблон(" с %1", Формат(ВремяНачалаРабот, "ДЛФ=T;"));
		КонецЕсли;
		Если ЗначениеЗаполнено(ВремяОкончанияРабот) Тогда
			Сообщение = Сообщение + СтрШаблон(" до %1.", Формат(ВремяОкончанияРабот, "ДЛФ=T;"));
		КонецЕсли;
		
		Сообщение = Сообщение + Символы.ПС + Символы.ПС +СтрШаблон("Сообщение отправлено: %1.", ТекущаяДатаСеанса());
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

Процедура ОтправитьСообщениеБоту(Сообщение) Экспорт
	СправочникОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	СправочникОбъект.ТекстСообщения = Сообщение;
	СправочникОбъект.Записать();
КонецПроцедуры

#КонецОбласти

#КонецЕсли
